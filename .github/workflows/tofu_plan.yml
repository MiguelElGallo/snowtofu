name: 'Deploy Snowflake IAC with Tofu'

on:
  pull_request:
  workflow_dispatch:


env:
    TF_VAR_organization_name: ${{ secrets.TF_VAR_ORGANIZATION_NAME }}
    TF_VAR_account_name: ${{ secrets.TF_VAR_ACCOUNT_NAME }}
    TF_VAR_private_key_path: ${{ secrets.TF_VAR_PRIVATE_KEY_PATH }}
    TF_VAR_resource_group_name: ${{ secrets.TF_VAR_RESOURCE_GROUP_NAME }}
    TF_VAR_storage_account_name: ${{ secrets.TF_VAR_STORAGE_ACCOUNT_NAME }}
    AZURE_LOCATION: 'westeurope'
    ARM_USE_OIDC: true
    AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
    AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
    AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

permissions:
    id-token: write
    contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    # environment: production # Optional: Define environment for secrets/variables
    environment: deploy-env
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Install OpenTofu
        run: |
          wget -O- https://github.com/opentofu/opentofu/releases/download/v1.9.1/tofu_1.9.1_amd64.deb > tofu.deb
          sudo dpkg -i tofu.deb
          tofu --version
    
      - name: Log in to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Write Snowflake Private Key to file
        run: |
          # Debug information
          echo "Path to use: ${{ env.TF_VAR_private_key_path }}"
          echo "Parent directory: $(dirname "${{ env.TF_VAR_private_key_path }}")"
          
          # Create directory if it doesn't exist
          mkdir -p "$(dirname "${{ env.TF_VAR_private_key_path }}")"
          
          # Write the key to file
          echo "${{ secrets.SNOWFLAKE_PRIVATE_KEY }}" > "${{ env.TF_VAR_private_key_path }}"
          
          # Set permissions
          chmod 600 "${{ env.TF_VAR_private_key_path }}"
          
          # Verify file exists
          ls -la "$(dirname "${{ env.TF_VAR_private_key_path }}")"

      - name: Run Tofu Init
        run: tofu init -backend-config="tenant_id=${{ secrets.AZURE_TENANT_ID }}" -backend-config="client_id=${{ secrets.AZURE_CLIENT_ID }}" -backend-config="subscription_id=${{ secrets.AZURE_SUBSCRIPTION_ID }}"

      - name: Run Tofu Plan
        run: tofu plan

      - name: Run Tofu Apply
        run: tofu apply -auto-approve